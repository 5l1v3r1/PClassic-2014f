import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.StringTokenizer;


public class PenguinByNorthPenguin {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader (
				new FileReader ("PenguinByNorthPenguinIN.txt"));
		
		while (br.ready()) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			double dir = Double.parseDouble(st.nextToken());
			double tolerance = Double.parseDouble(st.nextToken());
			System.out.println(getDirection(dir, tolerance));
		}
		
		br.close();
	}

    public static String getDirection(double dir, double tolerance) {
    	dir = modulusAngle(dir);
    	if (dir == 0.0) {
    		return "N";
    	} else if (dir == 90.0) {
    		return "E";
    	} else if (dir == 180.0) {
    		return "S";
    	} else if (dir == 270.0) {
    		return "W";
    	}
    	StringBuilder built = new StringBuilder();
    	double gotten = 0.0;
    	if (dir <= 90.0) {
    		// Top right, NE
    		gotten = 90.0;
    		built.append("E");
    		int iter = 0;
    		while (Math.abs(gotten - dir) < Math.abs(tolerance)) {
    			++iter;
    			if (gotten < dir) {
    				built.append("E");
    				gotten -= 90.0 / Math.pow(arg0, arg1)
    			}
    		}
    	} else if (dir >= 270.0) {
    		// Top left NW
    		gotten = 270.0;
    		built.append("N");
    	} else if (dir >= 180.0) {
    		// Bottom left hemisphere WS
    		gotten = 270.0;
    		built.append("S");
    	} else {
    		// Bottom right SE
    	}
    	return built.toString();
    }
    
    public static double modulusAngle(double dir) { 
    	while (dir < 0.0) {
    		dir += 360.0;
    	}
    	while (dir >= 360.0) {
    		dir -= 360.0;
    	}
    	return dir;
    }
}
